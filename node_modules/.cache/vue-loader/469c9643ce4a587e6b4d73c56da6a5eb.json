{"remainingRequest":"/Users/funkim/giftbox_bootstrap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/funkim/giftbox_bootstrap/src/components/layout/defaultHeader.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/funkim/giftbox_bootstrap/src/components/layout/defaultHeader.vue","mtime":1604212738972},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/css-loader/dist/cjs.js","mtime":1599900938539},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1599900939023},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/postcss-loader/src/index.js","mtime":1599900938750},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/cache-loader/dist/cjs.js","mtime":1599900938518},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/vue-loader/lib/index.js","mtime":1599900939023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZGVmYXVsdEhlYWRlcntwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjIwO30KLm1vYmlsZSAuc2lnbnVwX2xvZ297bWFyZ2luOjEwMHB4IDAgNTBweCAwO30KLm1vYmlsZSAuc2lnbnVwX2xvZ28gaW1ne3dpZHRoOjUwJX0K"},{"version":3,"sources":["defaultHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA","file":"defaultHeader.vue","sourceRoot":"src/components/layout","sourcesContent":["<template>\n    <div class=\"defaultHeader\">\n        <headerContentsPc v-if=\"deviceInfor == 'desktop'\" :reFinePcTarget=\"pcHeadType\"></headerContentsPc>\n        <headerContentsMobile v-else-if=\"deviceInfor == 'mobile'\" :reFineTarget=\"mobileHeadType\"></headerContentsMobile>\n    </div>\n</template>\n\n<script>\n    import headerContentsPc from '@/components/layout/defaultHeaderPc'\n    import headerContentsMobile from '@/components/layout/defaultHeaderMobile'\n\n    export default {\n        name: 'defaultHeader',\n        data() {\n            return{\n                deviceInfor: this.$mq,\n                notPcHeader: ['logInFrom', 'signUp', 'sginUpFrom', 'signUpUserFrom', 'signUpComplete'],\n                notHeader: ['logInFrom', 'signUp', 'sginUpFrom', 'signUpUserFrom', 'signUpComplete'],\n                pcHeadType:'',\n                mobileHeadType:'',\n            }\n        },\n        created() {\n            this.checkedService();\n        },\n        components: {\n            headerContentsPc,\n            headerContentsMobile,\n        },\n        methods: {\n            checkedService(){\n                for(var i=0;this.notHeader.length >i;i++){\n                    if(this.$route.name == this.notHeader[i]){\n                        console.log(this.$route.name)\n                        this.mobileHeadType = 'notHeader'\n                        break\n                    } else {\n                        this.mobileHeadType = 'notContent'\n                    }\n                }\n\n                for(var i=0;this.notPcHeader.length >i;i++){\n                    if(this.$route.name == this.notPcHeader[i]){\n                        this.pcHeadType = 'notHeader'\n                        break\n                    } else {\n                        this.pcHeadType = 'notContent'\n                    }\n                }\n                // console.log('name : ', this.$route.name, ' type : ', this.mobileHeadType, this.pcHeadType)\n            }\n        },\n        watch: {\n            $mq (val){\n                this.deviceInfor = val\n            },\n            $route (data){\n                console.log(data)\n                this.checkedService();\n            }\n        }\n    }\n</script>\n\n<style>\n.defaultHeader{position:relative;z-index:20;}\n.mobile .signup_logo{margin:100px 0 50px 0;}\n.mobile .signup_logo img{width:50%}\n</style>\n"]}]}