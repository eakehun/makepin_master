{"remainingRequest":"/Users/funkim/giftbox_bootstrap/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/funkim/giftbox_bootstrap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/funkim/giftbox_bootstrap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/funkim/giftbox_bootstrap/src/components/memBer/signUpFrom.vue?vue&type=template&id=42de0f52&scoped=true&","dependencies":[{"path":"/Users/funkim/giftbox_bootstrap/src/components/memBer/signUpFrom.vue","mtime":1609160510981},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/cache-loader/dist/cjs.js","mtime":1599900938518},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1599900939023},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/cache-loader/dist/cjs.js","mtime":1599900938518},{"path":"/Users/funkim/giftbox_bootstrap/node_modules/vue-loader/lib/index.js","mtime":1599900939023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}